{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"My Python Script\"\n",
        "format:\n",
        "  html:\n",
        "    code-fold: true\n",
        "---\n",
        "\n",
        "\n",
        "## Donations\n",
        "here is some stuff\n",
        "here is some other stuff\n",
        "and some more\n",
        "\n",
        "here is another set of things\n"
      ],
      "id": "5e2ad2f6"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "from dataclasses import dataclass\n",
        "\n",
        "@dataclass\n",
        "class Donation:\n",
        "    date: date\n",
        "    amount: float\n",
        "\n",
        "from datetime import date\n",
        "\n",
        "first_donation = Donation(date(2024, 2, 15), 5181.30)\n",
        "\n",
        "second_donation = Donation(date(2024, 9, 16), 7318.04)\n",
        "\n",
        "third_donation = Donation(date(2024, 10, 10), 15774.05)\n",
        "\n",
        "donations = [first_donation, second_donation, third_donation]"
      ],
      "id": "291a97e9",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "from dataclasses import dataclass\n",
        "from datetime import date, datetime\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "from scipy.stats import gaussian_kde\n",
        "import pandas as pd\n",
        "\n",
        "@dataclass\n",
        "class Donation:\n",
        "    date: date\n",
        "    amount: float\n",
        "\n",
        "# Sample data\n",
        "first_donation = Donation(date(2024, 2, 15), 5181.30)\n",
        "second_donation = Donation(date(2024, 9, 16), 7318.04)\n",
        "third_donation = Donation(date(2024, 10, 10), 15774.05)\n",
        "donations = [first_donation, second_donation, third_donation]\n",
        "\n",
        "# Convert dates to numerical values for KDE\n",
        "dates_numeric = [datetime.combine(d.date, datetime.min.time()).timestamp() for d in donations]\n",
        "amounts = [d.amount for d in donations]\n",
        "\n",
        "# Create a range of dates for smooth KDE\n",
        "date_range = np.linspace(min(dates_numeric), max(dates_numeric), 200)\n",
        "\n",
        "# Calculate KDE\n",
        "kde = gaussian_kde(dates_numeric, weights=amounts, bw_method=0.1)\n",
        "density = kde(date_range)\n",
        "\n",
        "# Create the visualization\n",
        "plt.figure(figsize=(12, 6))\n",
        "\n",
        "# Plot the KDE\n",
        "ax1 = plt.gca()\n",
        "ax1.plot(\n",
        "    [datetime.fromtimestamp(x) for x in date_range],\n",
        "    density,\n",
        "    'b-',\n",
        "    label='Donation Density',\n",
        "    alpha=0.6\n",
        ")\n",
        "ax1.fill_between(\n",
        "    [datetime.fromtimestamp(x) for x in date_range],\n",
        "    density,\n",
        "    alpha=0.3\n",
        ")\n",
        "\n",
        "# Plot the scatter points for actual donations\n",
        "ax2 = ax1.twinx()\n",
        "ax2.scatter(\n",
        "    [datetime.fromtimestamp(x) for x in dates_numeric],\n",
        "    amounts,\n",
        "    color='red',\n",
        "    s=100,\n",
        "    label='Donations',\n",
        "    zorder=5\n",
        ")\n",
        "\n",
        "# Formatting\n",
        "ax1.set_xlabel('Date')\n",
        "ax1.set_ylabel('Density')\n",
        "ax2.set_ylabel('Amount ($)')\n",
        "\n",
        "# Add title and adjust layout\n",
        "plt.title('Donation Amount Distribution Over Time')\n",
        "plt.tight_layout()\n",
        "\n",
        "# Show plot\n",
        "plt.show()"
      ],
      "id": "3e7e2bc6",
      "execution_count": null,
      "outputs": []
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "/Users/grantsmith/anaconda3/share/jupyter/kernels/python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}